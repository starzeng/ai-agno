from textwrap import dedent

from agno.agent import Agent
from agno.tools.exa import ExaTools

from models.gpu_stack import QWEN3_30B_128K

print(QWEN3_30B_128K.get_request_params())


book_recommendation_agent = Agent(
    name="Shelfie",
    tools=[ExaTools()],
    model=QWEN3_30B_128K,
    description=dedent("""\
        你是 Shelfie，一位充满热情且知识渊博的文学策展人，精通全球书籍！📚

        你的使命是通过详细、个性化的推荐，帮助读者发现他们的下一本最爱读物，
        基于他们的喜好、阅读历史和最新的文学动态。你将深厚的文学知识与最新的
        评分和评论结合，推荐能真正引起读者共鸣的书籍。
        
        [注意] 推荐的书籍信息一定要翻译成中文\
        """),
    instructions=dedent("""\
        每次推荐遵循以下步骤：

        1. 分析阶段 📖
           - 根据读者输入理解他们的偏好
           - 考虑提及的喜爱书籍的主题和风格
           - 考虑任何特定要求（类型、篇幅、内容警示）

        2. 搜索与策展 🔍
           - 使用 Exa 搜索相关书籍
           - 确保推荐多样化
           - 核实所有书籍信息的实时性与准确性

        3. 详细信息 📝
           - 书名和作者
           - 出版年份
           - 类型和子类型
           - Goodreads/StoryGraph 评分
           - 页数
           - 简洁有趣的剧情简介
           - 内容提示
           - 奖项与荣誉

        4. 额外特性 ✨
           - 如适用，包含系列信息
           - 推荐相似作者
           - 提及有声书可用性
           - 标注即将改编的信息

        展示风格：
        - 使用清晰的 markdown 格式
        - 以结构化表格呈现主要推荐
        - 将相似书籍分组
        - 使用表情符号标注类型 (📚 🔮 💕 🔪)
        - 每次查询至少推荐 5 本书
        - 每本书附简短说明
        - 突出作者和观点的多样性
        - 相关时标注触发警告 \
    """),
    markdown=True,
    add_datetime_to_context=True,
    debug_mode=True,
    debug_level=2,
    telemetry=False,
)

# 示例用法：不同类型的图书查询
run_output = book_recommendation_agent.run(
    "我非常喜欢《麻烦的人们》和《化学课》，你能推荐类似的书吗？",
)

print(run_output.content)

# 更多示例提示：
"""
按类型查询：
1. "推荐类似《美丽的世界，你在哪里》的当代文学小说"
2. "过去 5 年内完结的最佳奇幻系列有哪些？"
3. "找一些像《墨西哥哥特式小说》和《第九所》一样的氛围感哥特小说"
4. "今年最受好评的处女作小说有哪些？"

当代议题：
1. "推荐一些关于气候变化但不太压抑的书"
2. "有哪些适合非技术读者的人工智能相关好书？"
3. "推荐有关移民经历的回忆录"
4. "找一些关于心理健康且有希望结局的书"

读书会选择：
1. "有哪些适合读书会并能引发讨论的书？"
2. "推荐 350 页以内的文学小说"
3. "找一些能引人深思并探讨社会议题的小说"
4. "推荐多视角/多叙事结构的书籍"

即将出版：
1. "下个月最受期待的文学新书有哪些？"
2. "展示我最喜欢的作者即将出版的新书"
3. "本季备受关注的处女作小说有哪些？"
4. "列出即将被改编成影视的书籍"
"""
